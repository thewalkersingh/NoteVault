SELECT, WHERE, ORDER BY, GROUP BY, HAVING, JOIN (INNER, LEFT, RIGHT, FULL), DISTINCT, LIMIT, OFFSET, UNION, EXISTS, IN, BETWEEN, LIKE, SUBQUERY, ALIAS (AS), CASE


SELECT d.name AS department, COUNT(e.id) AS employee_count, AVG(e.salary) AS avg_salary
FROM departments d
JOIN employees e ON d.id = e.department_id
WHERE e.status = 'active' AND e.salary > 40000
GROUP BY d.name
HAVING COUNT(e.id) > 5
ORDER BY avg_salary DESC
LIMIT 10 OFFSET 5;


SELECT name, department, salary,
       RANK() OVER (PARTITION BY department ORDER BY salary DESC) AS dept_rank
FROM employees
WHERE salary > (SELECT AVG(salary) FROM employees)
UNION
SELECT name, 'N/A' AS department, 0 AS salary, NULL AS dept_rank
FROM retired_employees
ORDER BY dept_rank NULLS LAST
LIMIT 10;
